buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath rootProject.ext.plugin.androidPlugin
        classpath rootProject.ext.plugin.retroLambda
        classpath rootProject.ext.plugin.androidApt
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.5.3'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'
apply plugin: 'com.getkeepsafe.dexcount'


Integer VERSION_CODE = 2016060815
String VERSION_NAME = "2.1"
String APK_NAME = "AndroidMVP"
android {
    compileSdkVersion rootProject.ext.config.compileSdkVersion
    buildToolsVersion rootProject.ext.config.buildToolsVersion
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(output.outputFile.name, VERSION_CODE + "-" + VERSION_NAME + "-" + APK_NAME + ".apk"))
        }
    }

    dexOptions {
        incremental = true;
        preDexLibraries = false
        javaMaxHeapSize "4g" // 2g should be also OK
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }

        release {
            storeFile file('../releasecore.jks')
            keyAlias 'Release Core'
            keyPassword '811728'
            storePassword '811728'
        }
    }
    defaultConfig {
        applicationId "com.cvnhan.androidcr"
        minSdkVersion rootProject.ext.config.minSdkVersion
        targetSdkVersion rootProject.ext.config.compileSdkVersion
        versionCode VERSION_CODE
        versionName VERSION_NAME
        multiDexEnabled = true
        buildConfigField "boolean", "SERVICE_BASE", "false"
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
        release {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        dev {
            buildConfigField 'String', 'HOST', '""'
        }

        staging {
            buildConfigField 'String', 'HOST', '""'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    def dependency = rootProject.ext.dependency
    compile dependency.supportDesign
    compile dependency.supportv4
    compile dependency.appcompatv7
    compile dependency.recyclerviewv7
    compile dependency.dagger
    apt dependency.daggerCompiler
    provided dependency.generatedAnnotation;
    compile dependency.butterknife
    apt dependency.butterknifeCompiler
    compile dependency.otto
    compile dependency.retrofit
    compile dependency.retrofitConverterGson
    compile dependency.retrofitAdapterRxjava
    compile dependency.gson
    compile dependency.rxAndroid
    compile dependency.rxJava
    compile dependency.picasso

    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'

}